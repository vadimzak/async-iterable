{"version":3,"sources":["../src/AsyncIterable.js"],"names":["IterationError","errorObj","AsyncIterableBase","asyncFunc","array","forEach","item","push","transformFunc","MapAsyncIterable","filterFunc","FilterAsyncIterable","maxItems","TakeAsyncIterable","Symbol","asyncIterator","Error","undefined","brkObj","AsyncIteratorBase","AsyncIterable","innerIterable","queueSize","_innerIterable","_queueSize","StreamIterator","QueuedAsyncIterator","AsyncIterator","length","size","asyncIterable","next","_queue","pop","value","empty","done","_start","_asyncIterable","close","console","error","maxSize","sleepPeriodMs","_innerIterator","iterator","innerAsyncIterable","_innerAsyncIterable","_maxItems","TakeAsyncIterator","innerSize","Math","min","iterable","_nextIndex","_iterable","_innerAsyncIterator","_transformFunc","MapAsyncIterator","_filterFunc","FilterAsyncIterator","StreamIterable","streamFactory","queueConfig","_streamFactory","_queueConfig","_stream","on","pause","resume","errMsg","toString","err","errStr"],"mappings":"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","file":"AsyncIterable.js","sourcesContent":["//@flow\r\n\r\nimport Queue from './Queue'\r\nimport { asyncIterableForEach } from './asyncUtils'\r\n\r\n/***************************************/\r\n\r\nclass IterationError {\r\n  errorObj: any\r\n\r\n  constructor(errorObj: any) {\r\n    this.errorObj = errorObj\r\n  }\r\n}\r\n\r\n/***************************************/\r\n\r\nexport class AsyncIterableBase<T, B> {\r\n  static brkObj = Symbol('brkObj')\r\n\r\n  async forEach<Symbol>(asyncFunc: (item: B, i: number, brkObj: Symbol) => Promise<Symbol>): Promise<void> {\r\n    await asyncIterableForEach(this, asyncFunc)\r\n  }\r\n\r\n  async toArray(): Promise<Array<B>> {\r\n    let array = []\r\n    await this.forEach(async (item) => {\r\n      array.push(item)\r\n    })\r\n    return array\r\n  }\r\n\r\n  get size(): ?number {\r\n    return undefined\r\n  }\r\n\r\n  map<C>(transformFunc: (item: B) => C): MapAsyncIterable<T, C> {\r\n    return new MapAsyncIterable(this, transformFunc)\r\n  }\r\n\r\n  filter(filterFunc: (item: T) => boolean): FilterAsyncIterable<T> {\r\n    return new FilterAsyncIterable(this, filterFunc)\r\n  }\r\n\r\n  take(maxItems: number): TakeAsyncIterable<T> {\r\n    return new TakeAsyncIterable(this, maxItems)\r\n  }\r\n\r\n  [Symbol.asyncIterator](): AsyncIteratorBase<T, T> {\r\n    throw new Error('This function must be overridden by derived classes')\r\n  }\r\n}\r\n\r\nexport class AsyncIteratorBase<T, B> {\r\n  async next(): Promise<{ done: false, value: B } | { done: true }> {\r\n    throw new Error('This function must be overridden by derived classes')\r\n  }\r\n}\r\n\r\n/***************************************/\r\n\r\nexport default class AsyncIterable<T> extends AsyncIterableBase<T, T> {\r\n  _innerIterable: Iterable<T> | () => stream$Stream\r\n  _queueSize: number\r\n\r\n  static from<T>(innerIterable: Iterable<T> | () => stream$Stream, queueSize: number = 0): AsyncIterable<T> {\r\n    return new AsyncIterable(innerIterable, queueSize)\r\n  }\r\n\r\n  constructor(innerIterable: Iterable<T> | () => stream$Stream, queueSize: number = 0) {\r\n    super()\r\n    this._innerIterable = innerIterable\r\n    this._queueSize = queueSize\r\n  }\r\n\r\n  get size(): ?number {\r\n    return typeof this._innerIterable.length === 'undefined' ? this._innerIterable.size : this._innerIterable.length // if _innerIterable is not a list, undefined will be returned\r\n  }\r\n\r\n  [Symbol.asyncIterator](): AsyncIteratorBase<T, T> {\r\n    if (typeof this._innerIterable === 'function')\r\n      return new StreamIterator(this._innerIterable)\r\n    return this._queueSize ? new QueuedAsyncIterator(this) : new AsyncIterator(this)\r\n  }\r\n}\r\n\r\nclass QueuedAsyncIterator<T> extends AsyncIteratorBase<T, T> {\r\n  _asyncIterable: AsyncIterable<T>\r\n  _queue: Queue<T>\r\n\r\n  constructor(asyncIterable: AsyncIterable<T>) {\r\n    super()\r\n    this._asyncIterable = asyncIterable\r\n    this._queue = new Queue({ maxSize: this._asyncIterable._queueSize, sleepPeriodMs: 50 })\r\n    this._start()\r\n  }\r\n\r\n  next = async (): Promise<{ done: false, value: T } | { done: true }> => {\r\n    while (true) {\r\n      let value = await this._queue.pop()\r\n      if (value === Queue.empty)\r\n        return { done: true }\r\n      return { done: false, value: value }\r\n    }\r\n  }\r\n\r\n  _start = async () => {\r\n    try {\r\n      for (let value of this._asyncIterable._innerIterable) {\r\n        await this._queue.push(value)\r\n      }\r\n      this._queue.close()\r\n    } catch(err) {\r\n      console.error(`Error during processing QueuedAsyncIterator items`, err) \r\n    }\r\n  }\r\n}\r\n\r\nclass AsyncIterator<T> extends AsyncIteratorBase<T, T> {\r\n  _asyncIterable: AsyncIterable<T>\r\n  _innerIterator: Iterator<T>\r\n\r\n  constructor(asyncIterable: AsyncIterable<T>) {\r\n    super()\r\n    this._asyncIterable = asyncIterable\r\n    this._innerIterator = this._asyncIterable._innerIterable[Symbol.iterator]()\r\n  }\r\n\r\n  next = async (): Promise<{ done: false, value: T } | { done: true }> => {\r\n    let next = this._innerIterator.next()\r\n    if (next.done)\r\n      return { done: true }\r\n    return { done: false, value: next.value }\r\n  }\r\n}\r\n\r\n/***************************************/\r\n\r\nclass TakeAsyncIterable<T> extends AsyncIterableBase<T, T> {\r\n  _innerAsyncIterable: AsyncIterableBase<T, T>\r\n  _maxItems: number\r\n\r\n  constructor(innerAsyncIterable: AsyncIterableBase<T, T>, maxItems: number) {\r\n    super()\r\n    this._innerAsyncIterable = innerAsyncIterable\r\n    this._maxItems = maxItems\r\n  }\r\n\r\n  [Symbol.asyncIterator](): TakeAsyncIterator<T> {\r\n    return new TakeAsyncIterator(this)\r\n  }\r\n\r\n  get size(): ?number {\r\n    let innerSize = this._innerAsyncIterable.size\r\n    if (innerSize != undefined) {\r\n      return Math.min(innerSize, this._maxItems)\r\n    }\r\n  }\r\n}\r\n\r\nclass TakeAsyncIterator<T> extends AsyncIteratorBase<T, T> {\r\n  _iterable: TakeAsyncIterable<T>\r\n  _innerAsyncIterator: AsyncIteratorBase<T, T>\r\n  _maxItems: number\r\n  _nextIndex = 0\r\n\r\n  constructor(iterable: TakeAsyncIterable<T>) {\r\n    super()\r\n    this._iterable = iterable\r\n    this._innerAsyncIterator = this._iterable._innerAsyncIterable[Symbol.asyncIterator]()\r\n  }\r\n\r\n  async next(): Promise<{ done: false, value: T } | { done: true }> {\r\n    if (this._nextIndex >= this._iterable._maxItems)\r\n      return { done: true }\r\n    this._nextIndex++\r\n    return await this._innerAsyncIterator.next()\r\n  }\r\n}\r\n\r\n/***************************************/\r\n\r\nclass MapAsyncIterable<T, B> extends AsyncIterableBase<T, B> {\r\n  _innerAsyncIterable: AsyncIterableBase<T, T>\r\n  _transformFunc: (imte: T) => B\r\n\r\n  constructor(innerAsyncIterable: AsyncIterableBase<T, T>, transformFunc: (item: T) => B) {\r\n    super()\r\n    this._innerAsyncIterable = innerAsyncIterable\r\n    this._transformFunc = transformFunc\r\n  }\r\n\r\n  [Symbol.asyncIterator](): MapAsyncIterator<T, B> {\r\n    return new MapAsyncIterator(this)\r\n  }\r\n\r\n  size(): ?number {\r\n    return this._innerAsyncIterable.size\r\n  }\r\n}\r\n\r\nclass MapAsyncIterator<T, B> extends AsyncIteratorBase<T, B> {\r\n  _iterable: MapAsyncIterable<T, B>\r\n  _innerAsyncIterator: AsyncIteratorBase<T, T>\r\n  _maxItems: number\r\n  _nextIndex = 0\r\n\r\n  constructor(iterable: MapAsyncIterable<T, B>) {\r\n    super()\r\n    this._iterable = iterable\r\n    this._innerAsyncIterator = this._iterable._innerAsyncIterable[Symbol.asyncIterator]()\r\n  }\r\n\r\n  async next(): Promise<{ done: false, value: B } | { done: true }> {\r\n    let item = await this._innerAsyncIterator.next()\r\n    if (item.done === true)\r\n      return { done: true }\r\n    let value = await this._iterable._transformFunc(item.value)\r\n    return { value: value, done: false }\r\n  }\r\n}\r\n\r\n/***************************************/\r\n\r\nclass FilterAsyncIterable<T> extends AsyncIterableBase<T, T> {\r\n  _innerAsyncIterable: AsyncIterableBase<T, T>\r\n  _filterFunc: (item: T) => boolean\r\n\r\n  constructor(innerAsyncIterable: AsyncIterableBase<T, T>, filterFunc: (item: T) => boolean) {\r\n    super()\r\n    this._innerAsyncIterable = innerAsyncIterable\r\n    this._filterFunc = filterFunc\r\n  }\r\n\r\n  [Symbol.asyncIterator](): FilterAsyncIterator<T> {\r\n    return new FilterAsyncIterator(this)\r\n  }\r\n}\r\n\r\nclass FilterAsyncIterator<T> extends AsyncIteratorBase<T, T> {\r\n  _iterable: FilterAsyncIterable<T>\r\n  _innerAsyncIterator: AsyncIteratorBase<T, T>\r\n  _maxItems: number\r\n  _nextIndex = 0\r\n\r\n  constructor(iterable: FilterAsyncIterable<T>) {\r\n    super()\r\n    this._iterable = iterable\r\n    this._innerAsyncIterator = this._iterable._innerAsyncIterable[Symbol.asyncIterator]()\r\n  }\r\n\r\n  async next(): Promise<{ done: false, value: T } | { done: true }> {\r\n    let item: { done: false, value: T } | { done: true } = { done: true }\r\n    while (true) {\r\n      item = await this._innerAsyncIterator.next()\r\n      if (item.done === true)\r\n        break\r\n      if (await this._iterable._filterFunc(item.value))\r\n        break\r\n    }\r\n    return item\r\n  }\r\n}\r\n\r\n/***************************************/\r\n\r\nexport class StreamIterable<T, T> extends AsyncIterableBase<T, T> {\r\n  _streamFactory: () => stream$Stream\r\n  _queueConfig: Object\r\n\r\n  constructor(streamFactory: () => stream$Stream, queueConfig: Object) {\r\n    super()\r\n    this._streamFactory = streamFactory\r\n    this._queueConfig = queueConfig\r\n  }\r\n\r\n  [Symbol.asyncIterator]() {\r\n    return new StreamIterator(this._streamFactory(), this._queueConfig)\r\n  }\r\n}\r\n\r\nclass StreamIterator<T> extends AsyncIteratorBase<T, T> {\r\n  _queue: Queue<T>\r\n  _stream: stream$Stream\r\n\r\n  constructor(streamFactory: () => stream$Stream, queueConfig: Object = { maxSize: 10000 }) {\r\n    super()\r\n    this._queue = new Queue(queueConfig)\r\n    this._stream = streamFactory()\r\n    \r\n    //let stat = startStat('steram item')\r\n    this._stream.on('data', async (item: T) => {\r\n      try {\r\n        this._stream.pause()\r\n        await this._queue.push(item)\r\n        this._stream.resume()\r\n        //stat.inc()\r\n      } catch (err) {\r\n        let errMsg = `Error during handling StreamIterator stream data`\r\n        console.error(errMsg, err) \r\n        this._queue.push(new IterationError(`${errMsg}: ${err.toString()}`))\r\n      }\r\n    })\r\n    this._stream.on('end', () => {\r\n      try {\r\n        this._queue.close()\r\n        //stat.end()\r\n      } catch (err) {\r\n        console.error(`Error during handling StreamIterator stream end`, err) \r\n      }\r\n    })\r\n    this._stream.on('error', async (errStr) => {\r\n      try {\r\n        await this._queue.push(new IterationError(errStr))\r\n        this._queue.close()\r\n        //stat.end()\r\n      } catch (err) {\r\n        console.error(`Error during handling StreamIterator stream error`, err) \r\n      }\r\n    })\r\n  }\r\n\r\n  async next(): Promise<{ done: false, value: T } | { done: true }> {\r\n    let value = await this._queue.pop()\r\n\r\n    if (value instanceof IterationError) {\r\n      throw value.errorObj instanceof Error ? value.errorObj : new Error(value.errorObj)\r\n    }\r\n    if (value === Queue.empty) {\r\n      return { done: true }\r\n    }\r\n    return { value: value, done: false }\r\n  }\r\n}\r\n"]}