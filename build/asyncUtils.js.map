{"version":3,"sources":["../src/asyncUtils.js"],"names":["periodMs","Promise","setTimeout","r","sleep","iterable","asyncFunc","brkObj","Symbol","i","item","ret","asyncIterableForEach"],"mappings":";;;;;;;;uDAIO;AAAA,QAAqBA,QAArB,uEAAwC,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,6CACE,IAAIC,OAAJ,CAAY;AAAA,qBAAKC,WAAWC,CAAX,EAAcH,QAAd,CAAL;AAAA,aAAZ,CADF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeI,K;;;;;;wDAIf,kBAA0CC,QAA1C,EAA4DC,SAA5D;AAAA;;AAAA;AAAA;AAAA;AAAA;AACDC,kBADC,GACQC,OAAO,QAAP,CADR;AAEDC,aAFC,GAEG,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,uCAGkBJ,QAHlB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAGUK,gBAHV;AAAA;AAAA,mBAIaJ,UAAUI,IAAV,EAAgBD,GAAhB,EAAqBF,MAArB,CAJb;;AAAA;AAICI,eAJD;;AAAA,kBAKCA,QAAQJ,MALT;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeK,oB;;;;;AANtB","file":"asyncUtils.js","sourcesContent":["// @flow\r\n\r\nimport 'babel-polyfill'\r\n\r\nexport async function sleep(periodMs: number = 0) {\r\n  return new Promise(r => setTimeout(r, periodMs))\r\n}\r\n\r\nexport async function asyncIterableForEach<T, R>(iterable: Object, asyncFunc: (T, number, Symbol) => ?Symbol | Promise<?Symbol>) {\r\n  let brkObj = Symbol('brkObj')\r\n  let i = 0\r\n  for await (let item of iterable) {\r\n    let ret = await asyncFunc(item, i++, brkObj)\r\n    if (ret === brkObj)\r\n      break\r\n  }\r\n}\r\n"]}